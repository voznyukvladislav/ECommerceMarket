@using System.Text.Json
@using ECommerceMarket.Data
@{
    List<Category> categories = ViewBag.Categories;
    SubCategory subCategory = ViewBag.SubCategory;    
}

<script src="~/js/dropdown.js"></script>
<script src="~/js/viewProduct.js"></script>
<script src="~/js/jQuery.js"></script>

<div class="leftBar">
    <ul class="nav">    
        @for(int i = 0; i < categories.Count; i++)
        {   
            <li class="navItem"> <a class="item"> @categories[i].Name </a>     
                <ul class="daughterNav">                
                @for(int j = 0; j < categories[i].SubCategories.Count; j++)
                {
                    <li class="navItem">
                        <a class="item" asp-controller="ProductView" asp-action="Index" asp-route-subCategoryId="@categories[i].SubCategories[j].Id">
                            @categories[i].SubCategories[j].Name
                        </a>
                    </li>
                }
                </ul>
            </li>
        }
    </ul>    
</div>

<div class="content"> 
    @*<div class="filters">
        <p class="filtersHeader"> Фільтри </p>
        <hr />
        @for(int i = 0; i < subCategory.Presets.Count; i++)
        {
            @for(int j = 0; j < subCategory.Presets[i].PresetAttributes.Count; j++)
            {
                if(subCategory.Presets[i].PresetAttributes[j].Attribute.ToFilter)
                {
                    List<string> productAttributes = new List<string>();                    
                    int l = 0;
                    <div class="dropdown">
                        <a class="dropdownButton" id="dropdownButton@(i)@(j)" onclick="showList('dropdownList@(i)@(j)', 'dropdownButton@(i)@(j)')"> @subCategory.Presets[i].PresetAttributes[j].Attribute.Name </a>
                        <div class="dropdownContent" id="dropdownList@(i)@(j)">
                            @for(int k = 0; k < subCategory.Presets[i].PresetAttributes[j].Attribute.ProductAttributes.Count; k++)
                            {                        
                                if(!productAttributes.Contains(subCategory.Presets[i].PresetAttributes[j].Attribute.ProductAttributes[k].Value))
                                {
                                    productAttributes.Add(subCategory.Presets[i].PresetAttributes[j].Attribute.ProductAttributes[k].Value);
                                    <div class="checkboxListItem" 
                                        onclick="checkAndSend('checkbox@(i)@(j)@(k)',
                                            @subCategory.Presets[i].Id,
                                            @subCategory.Presets[i].PresetAttributes[j].Attribute.Id,
                                            @subCategory.Presets[i].PresetAttributes[j].Attribute.ProductAttributes[k].Value)">
                                        <input name="" type="checkbox" class="checkbox" id="checkbox@(i)@(j)@(k)">
                                        <label> @productAttributes[l++] </label>
                                    </div>
                                }
                            }
                        </div>
                    </div>                    
                }
            }
        }
    </div>*@

    <div class="table">
        @for(int i = 0; i < subCategory.Presets.Count; i++)
        {
            <table class="productsTable">
                @{
                    int colsNum = 4;
                    int rowsNum = subCategory.Presets[i].Products.Count % colsNum == 0
                    ? subCategory.Presets[i].Products.Count / colsNum 
                    : subCategory.Presets[i].Products.Count / colsNum + 1;

                    int l = 0;
                }
                @for(int j = 0; j < rowsNum; j++)
                {
                    <tr>                
                        @for(int k = 0; k < colsNum; k++)
                        {
                            <td class="productsTableCell">
                                @if(l < subCategory.Presets[i].Products.Count)
                                {
                                    List<PhotoDTO> productPhotos;
                                    try 
                                    { 
                                        productPhotos = JsonSerializer.Deserialize<List<PhotoDTO>>(subCategory.Presets[i].Products[l].PhotosJson); 
                                    } catch(Exception e)
                                    {
                                        productPhotos = new List<PhotoDTO>();
                                        productPhotos.Add(new PhotoDTO { FilePath = "" });
                                    }

                                    decimal currentPrice = subCategory.Presets[i].Products[l].Price -
                                    subCategory.Presets[i].Products[l].Discount.Value * subCategory.Presets[i].Products[l].Price;
                                    <div class="productsTableCellDiv" onclick="viewProduct(@subCategory.Presets[i].Products[l].Id)">
                                        @*<img class="productPhoto" src="Photos/@productPhotos[0].FilePath">*@
                                        <img class="productPhoto" src="@productPhotos[0].FilePath">
                                        <p class="productsTableText"> @subCategory.Presets[i].Products[l].Name </p>
                                        @if(currentPrice == subCategory.Presets[i].Products[l].Price)
                                        {
                                            <p> @subCategory.Presets[i].Products[l++].Price.ToString("0") ₴ </p>
                                        } else
                                        {
                                            <p><s>@subCategory.Presets[i].Products[l++].Price.ToString("0") ₴</s> @currentPrice.ToString("0") ₴ </p>
                                        }

                                    </div>
                                }
                            </td>
                        }
                    </tr>
                }
            </table>
        }
    </div>    
</div>