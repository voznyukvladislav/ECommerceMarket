@using ECommerceMarket.Data
@using System.Text.Json
@{
    List<Category> categories = ViewBag.Categories;
    Product product = ViewBag.Product;
}

<script src="~/js/slider.js"></script>
<script src="~/js/jQuery.js"></script>

<div class="leftBar">
    <ul class="nav">    
        @for(int i = 0; i < categories.Count; i++)
        {   
            <li class="navItem"> <a class="item"> @categories[i].Name </a>     
                <ul class="daughterNav">                
                @for(int j = 0; j < categories[i].SubCategories.Count; j++)
                {
                    <li class="navItem">
                        <a class="item" asp-controller="ProductView" asp-action="Index" asp-route-subCategoryId="@categories[i].SubCategories[j].Id">
                            @categories[i].SubCategories[j].Name
                        </a>
                    </li>
                }
                </ul>
            </li>
        }
    </ul>    
</div>

@{
    List<PhotoDTO> photos;
    try
    {
        photos = JsonSerializer.Deserialize<List<PhotoDTO>>(product.PhotosJson);
    } catch(Exception e)
    {
        photos = new List<PhotoDTO>();
        photos.Add(new PhotoDTO { FilePath = "" });
    }
}

<div class="content overflow padding15">
    <div class="photoContent" id="photoContent">
        <div class="photo">
        @*<img class="productPhotoView" id="productPhoto" src="@photos[0].FilePath"/>*@
            @*<img class="productPhotoView" id="productPhoto" src="~/Photos/@photos[0].FilePath"/>*@
            <img class="productPhotoView" id="productPhoto" src="@photos[0].FilePath"/>
        </div>
        <div class="sliderButtons">
            <table class="buttonsHolder">
                <tr>
                    <td> <a class="button" onclick="slide(@product.Id, 'false', 0)"> ← </a> </td>                    
                    <td> <p class="photoCounter"> 1 / @photos.Count </p> </td>
                    <td> <a class="button" onclick="slide(@product.Id, 'true', 0)"> → </a> </td>
                </tr>
            </table>
        </div>
    </div>
    
    @{
        decimal currentPrice = product.Price - product.Discount.Value * product.Price;
    }
    <div class="attributes">
        <table class="attributesTable">
            <tr>
                <td class="attributesTableAttributeNameCell">
                    <p>ЦІНА</p>
                </td>
                <td class="attributesTableAttributeValueCell">
                    @if(currentPrice == product.Price)
                    {
                        <p>@product.Price.ToString("0") ₴</p>
                    } else
                    {
                        <p> <s>@product.Price.ToString("0") ₴</s> @currentPrice.ToString("0") ₴</p>
                    } 
                </td>
            </tr>
            <tr>
                <td class="attributesTableAttributeNameCell">
                    <p>Назва</p>
                </td>
                <td class="attributesTableAttributeValueCell">
                    <p> @product.Name </p>
                </td>
            </tr>
            @for(int i = 0; i < product.ProductAttributes.Count; i++)
            {
            <tr>
                @if(!@String.IsNullOrEmpty(@product.ProductAttributes[i].Value)) {
                    <td class="attributesTableAttributeNameCell">
                        @product.ProductAttributes[i].Attribute.Name
                    </td>
                    <td class="attributesTableAttributeValueCell">
                        @product.ProductAttributes[i].Value
                    </td>
                }                
            </tr>
            }            
        </table>
    </div>
</div>